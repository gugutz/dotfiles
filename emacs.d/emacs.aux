\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\newlabel{sec:orgf083100}{{}{1}{Recompile init.el everytime emacs.org is changed and saved}{section*.2}{}}
\newlabel{sec:orgc55845a}{{}{1}{General editor settings}{section*.3}{}}
\newlabel{sec:org811dc98}{{}{1}{Allow access from emacsclient}{section*.4}{}}
\newlabel{sec:orga0db61d}{{}{2}{Prevent emacs to create lockfiles (.\#files\#)}{section*.5}{}}
\newlabel{sec:org3457311}{{}{2}{Use the system clipboard}{section*.6}{}}
\newlabel{sec:org42c347a}{{}{2}{Always follow symbolic links to edit the 'actual' file it points to}{section*.7}{}}
\newlabel{sec:org4c04811}{{}{2}{Enable mouse support in terminal mode}{section*.8}{}}
\newlabel{sec:orgaa10a00}{{}{2}{Save all tempfiles in \$TMPDIR/emacs\$UID/}{section*.9}{}}
\newlabel{sec:orgbf1fef5}{{}{2}{Disable the annoying Emacs bell ring (beep)}{section*.10}{}}
\newlabel{sec:org888e9b4}{{}{2}{Disable initial scratch message}{section*.11}{}}
\newlabel{sec:org4abf6c6}{{}{2}{Create alias to yes-or-no anwsers (y-or-n-p}{section*.12}{}}
\newlabel{sec:orgec9465d}{{}{3}{show matching parenthesis}{section*.13}{}}
\newlabel{sec:orgfb60ba4}{{}{3}{default indentation}{section*.14}{}}
\newlabel{sec:orgdc90f6c}{{}{3}{show line numbers}{section*.15}{}}
\newlabel{sec:orge562435}{{}{3}{line number : pretty format}{section*.16}{}}
\newlabel{sec:org2f8ef3e}{{}{3}{superword-mode and subword-modes}{section*.17}{}}
\newlabel{sec:org58ab644}{{}{3}{Turn on auto-revert mode (auto updates files changed on disk)}{section*.18}{}}
\newlabel{sec:org1d2991b}{{}{3}{Spellchecking}{section*.19}{}}
\newlabel{sec:org137ad7f}{{}{3}{C-n insert newlines if the point is at the end of the buffer}{section*.20}{}}
\newlabel{sec:org3fc381f}{{}{4}{Increase, decrease and adjust font size}{section*.21}{}}
\newlabel{sec:orgc98d361}{{}{4}{expand-region}{section*.22}{}}
\newlabel{sec:orgfff8450}{{}{4}{hippie-expand (native emacs expand function)}{section*.23}{}}
\newlabel{sec:orgf14d985}{{}{4}{Macros and helper functions}{section*.24}{}}
\newlabel{sec:orgb1e89d6}{{}{4}{Bindings}{section*.25}{}}
\newlabel{sec:org65acd41}{{}{5}{After}{section*.26}{}}
\newlabel{sec:org7e1e865}{{}{6}{Auto save function}{section*.27}{}}
\newlabel{sec:org698b094}{{}{6}{This hook to the above function was breaking the evil-esc-delay 0}{section*.28}{}}
\newlabel{sec:org5510d5d}{{}{6}{GPG Encryption}{section*.29}{}}
\newlabel{sec:org94f182c}{{}{6}{Packages}{section*.30}{}}
\newlabel{sec:org32d2d58}{{}{6}{package repositories}{section*.31}{}}
\newlabel{sec:org7c52bae}{{}{6}{initialize packages}{section*.32}{}}
\newlabel{sec:orgdc05d3c}{{}{7}{Add the folder 'config' to emacs load-path so i can require stuff from there}{section*.33}{}}
\newlabel{sec:org3a1be9f}{{}{7}{Require my personal packages}{section*.34}{}}
\newlabel{sec:orge233c30}{{}{7}{Evil}{section*.35}{}}
\newlabel{sec:org4a3591a}{{}{7}{Require Evil related packages}{section*.36}{}}
\newlabel{sec:org6a53348}{{}{8}{Don't wait for any other keys after escape is pressed}{section*.37}{}}
\newlabel{sec:org8cc7190}{{}{8}{Make Evil look a bit more like (n) vim (??)}{section*.38}{}}
\newlabel{sec:orgbb97fd8}{{}{8}{Window and buffer navigation with vim-like bindings}{section*.39}{}}
\newlabel{sec:org9706fc9}{{}{8}{vim-like navigation using C- HJKL (uppercase homerow keys)}{section*.40}{}}
\newlabel{sec:org3e71338}{{}{8}{vim-like navigation with C-w hjkl}{section*.41}{}}
\newlabel{sec:orgcbfcd27}{{}{9}{make esc quit or cancel everything in Emacs}{section*.42}{}}
\newlabel{sec:orgb21f7a3}{{}{9}{Cursor is alway black because of evil}{section*.43}{}}
\newlabel{sec:orgad27a55}{{}{10}{recover native emacs commands that are overriden by evil}{section*.44}{}}
\newlabel{sec:orgc248a18}{{}{11}{change cursor color according to mode}{section*.45}{}}
\newlabel{sec:org8c29ac4}{{}{11}{multiple cursors}{section*.46}{}}
\newlabel{sec:orge7ae41b}{{}{11}{evil-leader}{section*.47}{}}
\newlabel{sec:orgcdb88de}{{}{12}{Evil Surround}{section*.48}{}}
\newlabel{sec:org0722754}{{}{13}{Vim Commentary}{section*.49}{}}
\newlabel{sec:orgf8c7b08}{{}{13}{Evil-Matchit}{section*.50}{}}
\newlabel{sec:orgb1cc435}{{}{13}{org-mode}{section*.51}{}}
\newlabel{sec:org291f647}{{}{13}{Require ORG}{section*.52}{}}
\newlabel{sec:orgdc67caf}{{}{13}{Resolve issue with Tab not working with ORG only in Normal VI Mode in terminal}{section*.53}{}}
\newlabel{sec:orge3fbef0}{{}{13}{Show CLOSED tag line in closed TODO items}{section*.54}{}}
\newlabel{sec:orge79888a}{{}{13}{Prompt to leave a note when closing an item}{section*.55}{}}
\newlabel{sec:org455d727}{{}{14}{Function to activate export-on-save in org mode}{section*.56}{}}
\newlabel{sec:org22017a6}{{}{14}{Add hook to auto-export automatically on saveing ORG files}{section*.57}{}}
\newlabel{sec:orgd85509d}{{}{14}{add suport for the ignore tag (ignores a headline without ignoring its content)}{section*.58}{}}
\newlabel{sec:org8f41f40}{{}{14}{Evil-ORG}{section*.59}{}}
\newlabel{sec:org1761667}{{}{15}{ox-pandoc}{section*.60}{}}
\newlabel{sec:orge287151}{{}{15}{ox-twbs (exporter to twitter bootstrap html)}{section*.61}{}}
\newlabel{sec:org500e21b}{{}{15}{ReveaJS org-reveal:}{section*.62}{}}
\newlabel{sec:org3bdd29f}{{}{16}{UTF8 pretty bullets in org mode}{section*.63}{}}
\newlabel{sec:orga8f7555}{{}{16}{Helm}{section*.64}{}}
\newlabel{sec:orgea8e9a8}{{}{16}{Other helm settings}{section*.65}{}}
\newlabel{sec:orge900aa9}{{}{17}{Helm related bindings}{section*.66}{}}
\newlabel{sec:org9b277b0}{{}{17}{Projectile}{section*.67}{}}
\newlabel{sec:org4ffd080}{{}{17}{Activate Projectile}{section*.68}{}}
\newlabel{sec:org50fe3b6}{{}{17}{Dired}{section*.69}{}}
\newlabel{sec:org11b8a8e}{{}{17}{Magit}{section*.70}{}}
\newlabel{sec:orgb97d849}{{}{17}{Load evil-magit with magit buffer}{section*.71}{}}
\newlabel{sec:org4eedf4e}{{}{18}{define global keybing to magit-status}{section*.72}{}}
\newlabel{sec:orgbb1c654}{{}{18}{treemacs (neotree like navigation)}{section*.73}{}}
\newlabel{sec:orgb30f0a4}{{}{18}{Load treemacs and its relevant subpackages}{section*.74}{}}
\newlabel{sec:orgc7658e6}{{}{18}{toggle treemacs with F7}{section*.75}{}}
\newlabel{sec:orgf613e03}{{}{18}{treemacs-git-mode}{section*.76}{}}
\newlabel{sec:org6ff7d9a}{{}{18}{make treemacs open on emacs startup}{section*.77}{}}
\newlabel{sec:org494f5b3}{{}{19}{Neotree}{section*.78}{}}
\newlabel{sec:org4fa32e6}{{}{19}{neotree 'icons' theme, which supports filetype icons}{section*.79}{}}
\newlabel{sec:orgf0462c3}{{}{19}{set NeoTree default window width}{section*.80}{}}
\newlabel{sec:orga2d7a9b}{{}{19}{toggle neotree with F8}{section*.81}{}}
\newlabel{sec:org92ad762}{{}{19}{make nerdtree open on emacs startup}{section*.82}{}}
\newlabel{sec:orgdb77e4d}{{}{19}{make neotree window open and go the file currently opened}{section*.83}{}}
\newlabel{sec:orge35949f}{{}{19}{solve keybinding conflicts between neotree with evil mode}{section*.84}{}}
\newlabel{sec:orgc38dc53}{{}{20}{eyebrowse (window navigation)}{section*.85}{}}
\newlabel{sec:org6850658}{{}{20}{Shell}{section*.86}{}}
\newlabel{sec:orgb9070ed}{{}{20}{System Shell}{section*.87}{}}
\newlabel{sec:org87f24c9}{{}{20}{Make system shell open in a split-window buffer at the bottom of the screen}{section*.88}{}}
\newlabel{sec:org6d20c27}{{}{21}{Eshell}{section*.89}{}}
\newlabel{sec:org676b10d}{{}{21}{Make eshell open in a split-window buffer at the bottom of the screen}{section*.90}{}}
\newlabel{sec:org9ffc18b}{{}{21}{PDF Tools}{section*.91}{}}
\newlabel{sec:org86a9212}{{}{21}{Install pdf-tools if its not already installed}{section*.92}{}}
\newlabel{sec:orgf95922d}{{}{21}{Make buffer refresh every 1 second to PDF-tools updates the changed pdf}{section*.93}{}}
\newlabel{sec:orgcbd8127}{{}{22}{PDF tools evil keybindings}{section*.94}{}}
\newlabel{sec:org98afe30}{{}{22}{Appearance}{section*.95}{}}
\newlabel{sec:org2c88349}{{}{22}{Applying my theme}{section*.96}{}}
\newlabel{sec:orgd04c7cf}{{}{23}{doom-modeline}{section*.97}{}}
\newlabel{sec:orged3a72a}{{}{26}{parrot-mode}{section*.98}{}}
\newlabel{sec:orgd229a16}{{}{27}{nyan-mode}{section*.99}{}}
\newlabel{sec:org2cc4e4e}{{}{28}{solaire-mode}{section*.100}{}}
\newlabel{sec:org55301aa}{{}{28}{cleaning the default UI}{section*.101}{}}
\newlabel{sec:org90664c9}{{}{28}{Remove scroll bars from frames}{section*.102}{}}
\newlabel{sec:org46f5f53}{{}{29}{Remove menu bar and tool bar}{section*.103}{}}
\newlabel{sec:org50a7e1d}{{}{29}{centaur-tabs}{section*.104}{}}
\newlabel{sec:org0aa69d5}{{}{29}{Tab Style for centaur-tabs}{section*.105}{}}
\newlabel{sec:org53676d8}{{}{29}{Set the tabs height}{section*.106}{}}
\newlabel{sec:orgec76008}{{}{29}{Use custom icons on tabs from all-the-icons}{section*.107}{}}
\newlabel{sec:org55eff4a}{{}{30}{Gray out unselected tabs}{section*.108}{}}
\newlabel{sec:org8b77790}{{}{30}{Customize the modified marker}{section*.109}{}}
\newlabel{sec:org9e4fb30}{{}{30}{To change the displayed string for the modified-marker}{section*.110}{}}
\newlabel{sec:orgfd8d957}{{}{30}{Enable vim-like tab motions}{section*.111}{}}
\newlabel{sec:org9de4594}{{}{30}{Minor modes}{section*.112}{}}
\newlabel{sec:org1d28261}{{}{30}{Highlighting stuff in code (numbers, operators and escape sequences)}{section*.113}{}}
\newlabel{sec:org2ec2d8a}{{}{30}{which-key}{section*.114}{}}
\newlabel{sec:org0f80897}{{}{30}{diff-hl (highlights uncommited diffs in bar aside from the line numbers)}{section*.115}{}}
\newlabel{sec:org14cce7e}{{}{31}{smartparens}{section*.116}{}}
\newlabel{sec:orgd887e25}{{}{31}{evil-smartparens helps avoid conflicts between evil and smartparens}{section*.117}{}}
\newlabel{sec:org6ebc8a4}{{}{31}{rainbow mode}{section*.118}{}}
\newlabel{sec:org929656c}{{}{31}{enable rainbow-mode on relevant filetypes}{section*.119}{}}
\newlabel{sec:orge13a207}{{}{31}{Emmet}{section*.120}{}}
\newlabel{sec:org8bcf0e6}{{}{31}{Add hook to any markup file to load emmet-mode}{section*.121}{}}
\newlabel{sec:orgbc50cab}{{}{31}{Use emmet with JSX markup}{section*.122}{}}
\newlabel{sec:orgb17194b}{{}{31}{Smartscan mode}{section*.123}{}}
\newlabel{sec:orgc078652}{{}{32}{FlyCheck linter}{section*.124}{}}
\newlabel{sec:org05bd1d7}{{}{32}{Turn flycheck inline extension after flycheck starts}{section*.125}{}}
\newlabel{sec:orge00b4c0}{{}{32}{Languages Setup}{section*.126}{}}
\newlabel{sec:org040cbce}{{}{32}{web mode}{section*.127}{}}
\newlabel{sec:orgadfe77f}{{}{32}{Require Web-Mode}{section*.128}{}}
\newlabel{sec:org2fa8f84}{{}{32}{web-mode script/code offset indentation (for JavaScript, Java, PHP, Ruby, Go, VBScript, Python, etc.)}{section*.129}{}}
\newlabel{sec:org5378f6e}{{}{32}{JavaScript}{section*.130}{}}
\newlabel{sec:org6f29420}{{}{32}{Associate Javascript files with js2-mode}{section*.131}{}}
\newlabel{sec:org2d6060b}{{}{33}{PrettierJS}{section*.132}{}}
\newlabel{sec:orgf35e3dc}{{}{33}{PrettierJS}{section*.132}{}}
\newlabel{sec:org813bf63}{{}{33}{PrettierJS}{section*.132}{}}
\newlabel{sec:org1a46a6e}{{}{33}{PrettierJS}{section*.132}{}}
\newlabel{sec:orgca8b13f}{{}{33}{PrettierJS}{section*.132}{}}
\newlabel{sec:org16e240a}{{}{33}{js2-refactor}{section*.133}{}}
\newlabel{sec:orgf7a49f5}{{}{33}{js2-refactor}{section*.133}{}}
\newlabel{sec:orgfc30dfa}{{}{33}{Elixir}{section*.134}{}}
\newlabel{sec:org9daae4d}{{}{34}{Install elixir-mode if not already installed}{section*.135}{}}
\newlabel{sec:org695eb38}{{}{34}{Require elixir-mode}{section*.136}{}}
\newlabel{sec:orgb6a5f4b}{{}{34}{Elixir file types associations}{section*.137}{}}
\newlabel{sec:orgcce3a7b}{{}{34}{Create a buffer-local hook to run elixir-format on save, only when we enable elixir-mode}{section*.138}{}}
\newlabel{sec:orgf313a4e}{{}{34}{Alchemist}{section*.139}{}}
\newlabel{sec:org9af99af}{{}{34}{Alchemist}{section*.139}{}}
\newlabel{sec:org95a1383}{{}{34}{Ruby}{section*.140}{}}
\newlabel{sec:orgbb02eea}{{}{34}{Associate common Ruby files with enh-ruby-mode}{section*.141}{}}
\newlabel{sec:orgbc415b7}{{}{34}{Require enhanced-ruby major mode replacement for native ruby-mode}{section*.142}{}}
\newlabel{sec:org62103bc}{{}{35}{this bellow is optional, i only use it because it complains about not finding ruby in /usr/local/bin}{section*.143}{}}
\newlabel{sec:org086a047}{{}{35}{Enable superword-mode for enh-ruby-mode}{section*.144}{}}
\newlabel{sec:org89eefcd}{{}{35}{Enhanced Ruby Mode defines its own specific faces with the hook erm-define-faces. If your theme is already defining those faces, to not overwrite them, just remove the hook with:}{section*.145}{}}
\newlabel{sec:orgb7e83a7}{{}{35}{Inferior ruby}{section*.146}{}}
\newlabel{sec:orgab7d8cb}{{}{35}{Ruby compilation}{section*.147}{}}
\newlabel{sec:org87abdee}{{}{36}{ri support}{section*.148}{}}
\newlabel{sec:org3766029}{{}{36}{Rubocop}{section*.149}{}}
\newlabel{sec:org052f118}{{}{36}{Go}{section*.150}{}}
\newlabel{sec:orgba97b4e}{{}{36}{Enable go-mode}{section*.151}{}}
\newlabel{sec:org20a3058}{{}{36}{Associate Go files with go-mode}{section*.152}{}}
\newlabel{sec:org7143fc9}{{}{36}{Elm}{section*.153}{}}
\newlabel{sec:org1af8320}{{}{36}{Company backend for elm}{section*.154}{}}
\newlabel{sec:org0027f85}{{}{37}{Haskell}{section*.155}{}}
\newlabel{sec:org91eabe1}{{}{37}{PHP}{section*.156}{}}
\newlabel{sec:org7abdef3}{{}{37}{HTML}{section*.157}{}}
\newlabel{sec:org8de5ce5}{{}{37}{Associate HTML with web-mode}{section*.158}{}}
\newlabel{sec:org11ee253}{{}{37}{HTML element offset indentation}{section*.159}{}}
\newlabel{sec:org89aa09f}{{}{37}{CSS}{section*.160}{}}
\newlabel{sec:orge8c93b5}{{}{37}{Open CSS files with web-mode}{section*.161}{}}
\newlabel{sec:org9862038}{{}{37}{CSS offset indentation}{section*.162}{}}
\newlabel{sec:org00badeb}{{}{37}{YAML}{section*.163}{}}
\newlabel{sec:org0ca6140}{{}{38}{Unlike python-mode, this mode follows the Emacs convention of not binding the ENTER key to `newline-and-indent'. To get this behavior, add the key definition to `yaml-mode-hook':}{section*.164}{}}
\newlabel{sec:orgc6f286b}{{}{38}{\LaTeX {}}{section*.165}{}}
\newlabel{sec:org892a796}{{}{38}{AucTex settings}{section*.166}{}}
\newlabel{sec:org4748a72}{{}{38}{AucTex settings}{section*.166}{}}
\newlabel{sec:org87df796}{{}{38}{AucTex settings}{section*.166}{}}
\newlabel{sec:org48748ed}{{}{38}{AucTex settings}{section*.166}{}}
