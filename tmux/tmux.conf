#########################################
# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'kristijanhusak/tmux-simple-git-status'

# Configure prefix highlight plugin
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=#1D1F21,bg=yellow,bold'
set -g @prefix_highlight_fg '#1D1F21'
set -g @prefix_highlight_prefix_prompt 'Prefix'


#########################################
# GENERAL CONFIG

# Unbinding default control bind and making it Alt+A
unbind C-b

# Set Alt + A as default prefix
set -g prefix M-a

# Send Ctrl-A to other apps
bind M-a send-prefix

# force tmux to use systems default shell
set-option -g default-shell /bin/zsh

# Set terminal color mode to 256 colors
set -g default-terminal "screen-256color"

# Set parent terminal title to reflect current window in tmux session
set-option -g set-titles on
set -g set-titles-string "#I:#W"

set-window-option -g window-status-current-format "[#I #W#T]"
set-window-option -g window-status-format "[#I #W#T]"

# Automatically set window title to reflect the current program
set-window-option -g automatic-rename on

# start windows numbers at 1 (makes navigation a lot easier)
set -g base-index 1

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# No delay for escape key press
set -sg escape-time 0

# expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on
setw -q -g utf8 on

# scrollback limit
set -g history-limit 5000


#########################################
# VIM-LIKE CONFIGS

# Use vi-style navigation in Copy mode (which is also scrollback mode)
setw -g mode-keys vi
set -g status-keys vi

# Bind Esc to enter copy-mode
unbind [
bind Escape copy-mode

# Bind v to start selection
bind -T copy-mode-vi v send -X begin-selection

# Bind y to copy selection and send to clipboard
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c" \; display-message "tmux copied text to clipboard!"

# For vi copy mode bindings
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i" \; display-message "tmux copied text to clipboard!"
# For emacs copy mode bindings
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i" \; display-message "tmux copied text to clipboard!"

# Bind p to paste buffer
unbind ]
unbind p
bind p paste-buffer

# The following configuration allows for Vim style visual selection and yanking when in tmux copy mode.
# bind-key -T copy-mode-vi v send -X begin-selection
# if-shell 'case "`uname`" in *Linux*) true;; *) false;; esac' \
#          'bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection primary -i -f | xclip -selection clipboard -i"' \
#          'bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"'
# if-shell 'case "`uname`" in *Linux*) true;; *) false;; esac' \
#          'bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection primary -i -f | xclip -selection clipboard -i"' \
#          'bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"'

# edit tmux configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# Bind r to reload the configuration file
bind r source-file ~/.tmux.conf \; display-message "tmux config reloaded!"


########################################
# SESSION CONFIGS

# create session
bind M-c new-session

# list sessions to choose from
bind s choose-tree

# find session
bind M-f command-prompt -p find-session 'switch-client -t %%'

 # Bind X to kill session
unbind X
bind X confirm-before -p "kill-session #W? (y/n)" kill-session


########################################
# WINDOWS AND PANES CONFIGS

# make tmux fill the entire window
# (remove constraint to limit window-size based on the smallest client connected to the session)
set-window-option -g aggressive-resize on

# map | and - and v and s for intuitive pane splitting
bind | split-window -h
bind - split-window -v
bind h split-window -h
bind v split-window -v

set-option -g pane-active-border-bg default
set-option -g pane-active-border-fg colour208

# Alt+w creates a new tmux window (aka new tab)
# bind-key -n M-w new-window

# pane resize with vim style CAPITALIZED KEYS
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5
# pane resizing with vim style
# changed to control to use alt+key to moving text in vim
bind C-M-j resize-pane -D
bind C-M-k resize-pane -U
bind C-M-h resize-pane -L
bind C-M-l resize-pane -R


########################################
# WINDOWS AND PANES NAVIGATION
########################################

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
# bind -n M-H select-pane -L \; display-message "tmux resizing left"
# bind -n M-J select-pane -D \; display-message "tmux resizing down"
# bind -n M-K select-pane -U \; display-message "tmux resizing up"
# bind -n M-L select-pane -R \; display-message "tmux resizing right"

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
# disabled this because it conflicts with emacs windmove command
# bind -n M-Left  previous-window
# bind -n M-Right next-window

# Navigate between tmux windows with alt+<number>
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9


# bindings for vim-tmux-navigator Vim plugin, suggested by the plugin's main docs

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#     bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#     bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#     bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#     bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#     bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#     bind-key -T copy-mode-vi C-h select-pane -L
#     bind-key -T copy-mode-vi C-j select-pane -D
#     bind-key -T copy-mode-vi C-k select-pane -U
#     bind-key -T copy-mode-vi C-l select-pane -R
#     bind-key -T copy-mode-vi C-\ select-pane -l

#*************************************
# emacs and tmux windows navigation
# see -> http://blog.kdheepak.com/emacsclient-and-tmux-split-navigation.html

## Smart pane switching with awareness of emacs/vim splits.
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"



##########################################
# APPEARANCE AND STATUS LINE
#########################################

if '[ -f ./tmux-theme.conf]' 'source ./tmux-theme.conf'

# turn on the status bar
set -g status on

# set position of the status bar
set-option -g status-position bottom

set -g status-interval 5
set -g status-left-length 20
set -g status-right-length 100
set -g status-justify centre

# set the status line's colors
set -g status-style fg=white,bg="#1D1F21"

# set the color of the window list
setw -g window-status-style fg=cyan,bg='#1D1F21'

# set the color of the current window
setw -g window-status-current-style fg='#1D1F21',bg=green

# Command / message line
set -g message-style fg=white,bg='#1D1F21'


# Show user@machine [current pane] on left status bar pane
set -g status-left â€‹"[#I] [#P/#(tmux list-panes | wc -l)]"

# Show system status on right pane
set -g status-right "#{prefix_highlight} | #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_swap} | #(echo $USER)#[default]@#H"

# Show simple git status
set -g status-left "#{simple_git_status}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
