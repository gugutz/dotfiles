#########################################
# GENERAL CONFIG
########################################

# Set 256 colors for tmux
set -g default-terminal "screen-256color"

# scrollback limit
set -g history-limit 15000

# set position of the status bar
set-option -g status-position bottom


# force tmux to use systems default shell
set-option -g default-shell /bin/zsh


# Use vi-style navigation in Copy mode (which is also scrollback mode)
setw -g mode-keys vi
set -g status-keys vi

# start windows numbers at 1 (makes navigation a lot easier)
set -g base-index 1

# Automatically set window title to reflect the current program
set-window-option -g automatic-rename on
set-option -g set-titles on

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# No delay for escape key press
set -sg escape-time 0

# Unbinding default control bind and making it Alt+A
unbind C-b
set -g prefix M-a
bind M-a send-prefix

# expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on
setw -q -g utf8 on

set -g history-limit 5000

# edit tmux configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# Reload tmux config
bind r source-file ~/.tmux.conf


########################################
# TMUX & VIM STUFF
########################################

set-window-option -g window-status-current-format "[#I #W#T]"
set-window-option -g window-status-format "[#I #W#T]"



########################################
# SESSION CONFIGS
########################################

# create session
bind M-c new-session

# list sessions to choose from
bind s choose-tree

# find session
bind M-f command-prompt -p find-session 'switch-client -t %%'


########################################
# WINDOWS AND PANES CONFIGS
########################################

# map | and - and v and s for intuitive pane splitting
bind-key | split-window -h
bind-key - split-window -v
bind-key h split-window -h
bind-key v split-window -v


# Alt+w creates a new tmux window (aka new tab)
bind-key -n M-w new-window

# pane resize with vim style CAPITALIZED KEYS
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
# pane resizing with vim style
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R


########################################
# WINDOWS AND PANES NAVIGATION
########################################

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
# disabled this because it conflicts with emacs windmove command
# bind -n M-Left  previous-window
# bind -n M-Right next-window

# Navigate between tmux windows with alt+<number>
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9


# bindings for vim-tmux-navigator Vim plugin, suggested by the plugin's main docs

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#     bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#     bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#     bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#     bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#     bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#     bind-key -T copy-mode-vi C-h select-pane -L
#     bind-key -T copy-mode-vi C-j select-pane -D
#     bind-key -T copy-mode-vi C-k select-pane -U
#     bind-key -T copy-mode-vi C-l select-pane -R
#     bind-key -T copy-mode-vi C-\ select-pane -l

#*************************************
# emacs and tmux windows navigation
# see -> http://blog.kdheepak.com/emacsclient-and-tmux-split-navigation.html

## Smart pane switching with awareness of emacs splits.
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

######################################
# HELPER FUNCTIONS
######################################

# The following configuration allows for Vim style visual selection and yanking when in tmux copy mode.
setw -g mode-keys vi
unbind-key [
bind-key Escape copy-mode
unbind-key p
bind-key p paste-buffer
bind-key -Tcopy-mode-vi v send -X begin-selection
if-shell 'case "`uname`" in *Linux*) true;; *) false;; esac' \
    'bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection primary -i -f | xclip -selection clipboard -i"' \
        'bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"'
        if-shell 'case "`uname`" in *Linux*) true;; *) false;; esac' \
            'bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection primary -i -f | xclip -selection clipboard -i"' \
                'bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"'



#########################################
# IMPORT POWERLINE STATUS BAR BINDING FOR TMUX
########################################
run-shell "powerline-daemon -q"
source-file /usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf 

    
